class Solution:
    def isValidSudoku(self, board) -> bool:
        nums = []
        for i, row in enumerate(board):
            for j, x in enumerate(row):
                if x != '.':
                    nums += [(x, j), (i, x), (i//3, j//3, x)]
        return len(set(nums)) == len(nums)
        

board = [
  ["8","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
s = Solution()
r = s.isValidSudoku(board)
print(r)
